{"version":3,"sources":["README.md","components/Header/index.jsx","components/Home/index.jsx","lessons/lesson_1/components/Notification/index.jsx","lessons/lesson_1/components/Guest/index.jsx","lessons/lesson_1/components/Header/Search/index.jsx","lessons/lesson_1/assets/search.svg","lessons/lesson_1/components/Header/SearchButton/index.jsx","lessons/lesson_1/components/Header/index.jsx","lessons/lesson_1/components/GuestList/index.jsx","lessons/lesson_1/views/Main/index.jsx","lessons/lesson_2/components/Notification/index.jsx","lessons/lesson_2/components/Task1/index.jsx","lessons/lesson_2/components/User/index.jsx","lessons/lesson_2/components/Task2/index.jsx","lessons/lesson_2/assets/puff.svg","lessons/lesson_2/components/LoaderImg/index.jsx","lessons/lesson_2/components/Task3/index.jsx","lessons/lesson_2/components/Task4/index.jsx","lessons/lesson_2/components/Button/index.jsx","lessons/lesson_2/components/Table/index.jsx","lessons/lesson_2/components/Table/Row/index.jsx","lessons/lesson_2/components/Table/Cell/index.jsx","lessons/lesson_2/views/Main/index.jsx","lessons/lesson_3/components/Toggler/index.jsx","lessons/lesson_3/components/TogglerItem/index.jsx","lessons/lesson_3/components/Input/index.jsx","lessons/lesson_3/components/Table/index.jsx","lessons/lesson_3/components/Table/Row/index.jsx","lessons/lesson_3/components/Table/Cell/index.jsx","lessons/lesson_3/views/Task1/index.jsx","lessons/lesson_3/views/Task2/index.jsx","lessons/lesson_3/views/Task3/index.jsx","lessons/lesson_3/views/Task4/index.jsx","lessons/lesson_3/views/Main/index.jsx","lessons/lesson_4/components/Canvas/Canvas.jsx","lessons/lesson_4/views/Task2/theme-context.js","lessons/lesson_4/components/ChangeTheme/ChangeTheme.jsx","lessons/lesson_4/components/ControlledForm/ControlledForm.jsx","lessons/lesson_4/components/Selector/Selector.jsx","lessons/lesson_4/components/SelectorItem/SelectorItem.jsx","lessons/lesson_4/components/SelectorDrop/SelectorDrop.jsx","lessons/lesson_4/components/UseEffectComponents/UseEffectComponents.jsx","lessons/lesson_4/libs/dataParse.js","lessons/lesson_4/components/JSONPlaceholder/JSONPlaceholder.jsx","lessons/lesson_4/components/JSONPlaceholder2/JSONPlaceholder2.jsx","lessons/lesson_4/components/JSONPlaceholder3/JSONPlaceholder3.jsx","lessons/lesson_4/components/useDataFetch/useDataFetch.jsx","lessons/lesson_4/views/Task1/index.jsx","lessons/lesson_4/views/Task2/index.jsx","lessons/lesson_4/views/Task3/index.jsx","lessons/lesson_4/views/Task4/index.jsx","lessons/lesson_4/views/Main/index.jsx","App.jsx","index.jsx"],"names":["Header","className","href","target","rel","title","to","Home","state","markdown","readmePath","require","fetch","default","then","response","text","setState","catch","err","console","error","this","Component","Notification","props","msg","Guest","clickHandler","e","onArrived","dataset","_id","guest","name","company","phone","address","onClick","classNames","isArrived","disabled","Search","changeHandler","value","search","onSearch","hide","onChange","placeholder","type","SearchButton","onHideSearch","src","search_img","alt","hideSearch","GuestList","val","guests","_customFilter","length","obj","filter","JSON","stringify","toUpperCase","indexOf","map","Main","massages","style","color","id","defaultProps","Task1","addMassages","compose","f","g","x","backgroundColor","action","log","User","user","email","interviewed","city","width","logger","Task2","changeInterviewed","users","getUsers","a","axios","get","data","message","status","LoaderImg","handleImageLoaded","timer","setTimeout","loading","handleImageErrored","imageStatus","img","Image","clearTimeout","hidden","puff","onLoad","onError","Task3","Task4","currency","dataGenerator","n","push","date","generateRandomDate","number","Math","floor","random","money","Date","getTime","toDateString","head","background","row","uuidv4","Button","Table","children","theme","React","Children","child","i","cloneElement","index","Row","DateCell","NumberCell","MoneyCell","TextCell","types","component","Cell","subCell","find","cell","cells","Toggler","activeState","count","item","isValidElement","active","TogglerItem","Input","handler","contentLength","contentMaxLength","valid","maxLength","max","min","memo","prev","next","items","_","modState","toggle","getFullYear","input","password","year","month","day","language","gender","layout","Object","values","submitHandler","preventDefault","form","forEach","localName","toLowerCase","classList","contains","parentElement","previousSibling","textContent","entries","key","onSubmit","data_array","Array","from","table","clone","ri","ci","Canvas","chartRef","createRef","randomizeColor","join","randomizeCountry","lineNames","randomizeData","stop","chart","datasets","generateLine","label","borderColor","update","start","setInterval","labels","dynamic","labelsTypes","labelsLength","labelsStep","line","inc","getRandomInt","shift","interval","run","clearInterval","inputHandler","intervalHandler","dynamicHandler","resetData","defaultLabels","refresh","chartName","ctx","current","getContext","Chart","options","elements","tension","responsive","plugins","legend","position","display","ceil","ref","step","defaults","ThemeContext","createContext","ChangeTheme","toggler","Consumer","changeTheme","ControlledForm","useState","stack","setStack","selector","setSelector","setToggler","username","setUsername","setEmail","useEffect","validateEmail","test","String","trim","alert","result","Selector","btnRef","useRef","show","setShow","setWidth","changeShow","getWidth","w","offsetWidth","SelectorItem","SelectorDrop","UseEffectComponents","limit","setLimit","urls","url","randomUrl","randomIndex","splice","parser","body","completed","thumbnailUrl","dataParse","posts","JSONPlaceholder","useDataFetch","textAlign","JSONPlaceholder2","JSONPlaceholder3","setData","res","json","country","Provider","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5fdbe929.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/README.94188c94.md\";","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './style.scss'\n\nexport const Header = () => {\n    return (\n            <nav className='header'>\n                <div className='header__logo'>\n                    <a className='header__logo__link'\n                           href='https://github.com/UnderMountain96'\n                           target='_blank' rel='noreferrer' title='GitHub UnderMountain96'>\n                            UM\n                        </a>\n                </div>\n                <ul className='header__list'>\n                    <li className='header__list__item'>\n                        <Link className='header__list__item__link' to=\"/\">\n                            Home\n                        </Link>\n                    </li>\n                    <li className='header__list__item'>\n                        <Link className='header__list__item__link' to=\"/lesson/1\">\n                            Lesson 1\n                        </Link>\n                    </li>\n                    <li className='header__list__item'>\n                        <Link className='header__list__item__link' to=\"/lesson/2\">\n                            Lesson 2\n                        </Link>\n                    </li>\n                    <li className='header__list__item'>\n                        <Link className='header__list__item__link' to=\"/lesson/3\">\n                            Lesson 3\n                        </Link>\n                    </li>\n                    <li className='header__list__item'>\n                        <Link className='header__list__item__link' to=\"/lesson/4\">\n                            Lesson 4\n                        </Link>\n                    </li>\n                </ul>\n            </nav>\n    );\n};\n","import React, {Component} from 'react';\nimport {Markdown} from \"react-marked-renderer\";\nimport './style.scss'\nimport 'github-markdown-css/github-markdown.css'\n\n\nexport class Home extends Component {\n    state = {\n        markdown: ''\n    }\n\n    componentDidMount() {\n        const readmePath = require(\"../../README.md\");\n        fetch(readmePath.default)\n                .then(response => {\n                    return response.text()\n                })\n                .then(text => {\n                    this.setState({\n                        markdown: text\n                    })\n                })\n                .catch(err => {\n                    console.error(err)\n                })\n    }\n\n\n    render() {\n        const {markdown} = this.state;\n\n        return (\n                <>\n                    <h1>Home</h1>\n                    <div className='home'>\n                        <div className='markdown-body'>\n                            <Markdown markdown={markdown}/>\n                        </div>\n                    </div>\n                </>\n\n\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './style.scss'\n\n\nexport class Notification extends Component {\n    render() {\n        return (\n            <div className='search-notification'>\n                {this.props.msg}\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport classNames from 'classnames';\nimport './style.scss';\n\n\nexport class Guest extends Component {\n    clickHandler = (e) => {\n        this.props.onArrived(e.target.dataset._id)\n    }\n\n    render() {\n        const {guest} = this.props\n        return (\n            <div className='guest'>\n                <div className='guest__info'>\n                    Гость <b>{guest.name}</b> работает в компании <b>\"{guest.company}\".</b><br/>\n                    Его котнакты:<br/>\n                    <b>{guest.phone};</b><br/>\n                    <b>{guest.address}</b>\n                </div>\n                <div className='guest__btn'>\n                    <button\n                        data-_id={guest._id}\n                        onClick={this.clickHandler}\n                        className={classNames('btn', {'active': guest.isArrived})}\n                        disabled={guest.isArrived}\n                    >\n                        Прибыл\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport classNames from 'classnames'\nimport './style.scss';\n\n\nclass Search extends Component {\n    changeHandler = (e) => {\n        const {value} = e.target;\n        this.setState({search: value})\n        this.props.onSearch(value)\n    }\n\n    render() {\n        const {search} = this.props\n        return (\n                <div className={classNames('search', {'hide': this.props.hide})}>\n                    <input onChange={this.changeHandler} value={search} placeholder='Введите имя гостя для поиска'\n                           type=\"text\"/>\n                </div>\n        );\n    }\n}\n\nexport default Search;\n","export default __webpack_public_path__ + \"static/media/search.d97ba9ca.svg\";","import React, {Component} from 'react';\nimport './style.scss';\nimport search_img from '@lesson_1/assets/search.svg';\n\n\nclass SearchButton extends Component {\n    render() {\n        return (\n            <button onClick={this.props.onHideSearch} type='button' className='search-btn'>\n                <img src={search_img} alt=\"\"/>\n            </button>\n        );\n    }\n}\n\nexport default SearchButton;\n","import React, {Component} from 'react';\nimport './style.scss'\nimport Search from \"./Search\";\nimport SearchButton from \"./SearchButton\";\n\nexport class Header extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            hideSearch: false\n        }\n    }\n\n    onHideSearch = () => {\n        this.setState({'hideSearch': !this.state.hideSearch})\n    }\n\n    render() {\n        return (\n            <>\n                <div className='header-block'>\n                    <h1>Список гостей</h1>\n                    <s>Список жертв</s>\n                    <SearchButton onHideSearch={this.onHideSearch}/>\n                </div>\n                <Search hide={this.state.hideSearch} onSearch={this.props.onSearch}/>\n            </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Guest, Notification, Header} from '@lesson_1/components';\n\n\nexport class GuestList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            guests: props.guests.map(guest => ({\n                ...guest,\n                isArrived: false\n            })),\n            msg: ''\n        }\n    }\n\n    onSearch = (val) => {\n        this.setState({\n            guests:\n                (val)\n                ? this._customFilter(this.props.guests, val)\n                : this.props.guests,\n            msg:\n                (this._customFilter(this.props.guests, val).length)\n                ? ''\n                : 'ничего не найдено'\n        })\n    }\n\n    _customFilter = (obj, val) => {\n        return obj.filter(guest => JSON.stringify(guest).toUpperCase().indexOf(val.toUpperCase()) > -1)\n    }\n\n    onArrived = (_id) => {\n        const guest = this.state.guests.filter(guest => guest._id === _id)[0]\n        guest.isArrived = !guest.isArrived\n        this.setState({\n            guests: this.state.guests\n        })\n    }\n\n    render() {\n        const guests = this.state.guests\n        const msg = this.state.msg\n        return (\n            <div className='container'>\n                <Header onSearch={this.onSearch}/>\n                <Notification msg={msg}/>\n                {guests.map(guest => <Guest onArrived={this.onArrived} key={guest._id} guest={guest}/>)}\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {GuestList} from '@lesson_1/components';\n\nimport guests from '@lesson_1/store/guests.json'\n\nexport class Main extends Component {\n    render() {\n        return (\n                <>\n                    <h1>Lesson 1</h1>\n                    <GuestList guests={guests}/>\n                </>\n        );\n    }\n}\n","import React from 'react';\nimport './style.scss'\n\nconst Notification = ({massages}) => {\n    return (\n        <>\n            <h1 className='log-header'>LOG</h1>\n            <div className='notification'>\n                {\n                    massages.map((msg) =>\n                        <div\n                            key={msg.id}\n                            style={{color: msg.color}}\n                            className='msg'>\n                            {msg.id}: <b>{msg.text}</b>\n                        </div>\n                    )}\n            </div>\n        </>\n    );\n};\n\nNotification.defaultProps = {\n    massages: []\n}\n\nexport default Notification;\n","import React, {Component} from 'react';\nimport {Button} from \"@lesson_2/components\";\nimport Notification from \"@lesson_2/components/Notification\";\n\nexport class Task1 extends Component {\n    state = {\n        massages: []\n    }\n\n    addMassages = (msg) => {\n        this.setState({\n            massages: [\n                msg,\n                ...this.state.massages\n            ]\n        })\n\n    }\n\n    compose = (f, g) => {\n        return function (x) {\n            return f(g(x));\n        };\n    };\n\n    render() {\n        const {compose, addMassages, state} = this\n\n        return (\n                <>\n                    <h1>Task 1</h1>\n                    <div>\n                        <Button/>\n\n                        <Button\n                                text={'damage'}\n                                style={{backgroundColor: '#B80000'}}\n                                action={\n                                    compose(() => console.log('damage click'),\n                                            (msg) => addMassages(msg))\n                                }\n                        />\n\n                        <Button\n                                text={'agile'}\n                                style={{backgroundColor: '#18A200'}}\n                                action={\n                                    compose(() => console.log('agile click'),\n                                            (msg) => addMassages(msg))\n                                }\n                        />\n\n                        <Button\n                                text={'magic'}\n                                style={{backgroundColor: '#6900a2'}}\n\n                                action={\n                                    compose(() => console.log('magic click'),\n                                            (msg) => addMassages(msg))\n                                }\n                        />\n                    </div>\n\n                    <Notification massages={state.massages}/>\n                </>\n        );\n    }\n}\n","import React from 'react';\nimport {Button} from \"@lesson_2/components\";\nimport classNames from 'classnames';\nimport './style.scss'\n\n\nconst User = ({user, action}) => {\n    const {id, name, company, address, phone, email, interviewed} = user\n\n    const clickHandler = () => {\n        action(id)\n    }\n\n    return (\n        <div className={classNames('user', {'interviewed': interviewed})}>\n            <div>\n                <b>{name}</b><br/>\n                Company: <b>{company.name}</b><br/>\n                Address: <b>{address.city}</b><br/>\n                Contact:<br/>\n                <b>{phone}, {email}</b><br/>\n            </div>\n\n            <div>\n                <Button\n                    text={interviewed ? 'interviewed' : 'interview'}\n                    style={{\n                        width: '200px',\n                        color: interviewed ? '#000000' : '#ffffff',\n                        backgroundColor: interviewed ? '#94c21e' : '#c61818'}}\n                    action={clickHandler}\n                    logger={function() {}}/><br/>\n            </div>\n        </div>\n    );\n};\n\nexport default User;\n","import React, {Component} from 'react';\nimport './style.scss'\nimport axios from 'axios'\nimport User from \"@lesson_2/components/User\";\n\n\nexport class Task2 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            users: [],\n            error: ''\n        }\n    }\n\n    changeInterviewed = (id) => {\n        this.setState({\n            ...this.state,\n            users: this.state.users.map(user =>\n                user.id === id ? {...user, interviewed: !user.interviewed} : user\n            )\n        })\n    }\n\n    getUsers = async () => {\n        try {\n            const response = await axios.get('https://jsonplaceholder.typicode.com/users');\n            this.setState({\n                ...this.state,\n                users: response.data.map(user => ({\n                        interviewed: false,\n                        ...user,\n\n                    })\n                )\n            })\n        } catch (error) {\n            const {response, message} = error\n            this.setState({\n                error: {\n                    status: (response && response.status) || 400,\n                    msg: message || 'not found'\n                }\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.getUsers()\n    }\n\n    render() {\n        const {users, error} = this.state\n        const {changeInterviewed} = this\n        return (\n            <>\n                <h1>Task 2</h1>\n                <div className='usersList'>\n                    {\n                        users.map(user =>\n                            <User key={user.id} action={changeInterviewed} user={user}/>\n                        )\n                    }\n                </div>\n                {error ? <div>{error.msg}</div> : <></>}\n            </>\n        );\n    }\n}\n","export default __webpack_public_path__ + \"static/media/puff.58347f70.svg\";","import React, {Component} from 'react';\nimport puff from '@lesson_2/assets/puff.svg';\nimport './style.scss'\n\n\nclass LoaderImg extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            img: new Image(),\n            src: props.src,\n            title: props.title,\n            imageStatus: ''\n        }\n    }\n\n    handleImageLoaded = () => {\n        this.setState({\n            ...this.state,\n            timer: setTimeout(() => {\n                this.setState({\n                    ...this.state,\n                    loading: false\n                })\n            }, 2000)\n        })\n    }\n\n    handleImageErrored = () => {\n        this.timer = setTimeout(() => {\n            this.setState({\n                ...this.state,\n                loading: false,\n                imageStatus: 'failed to load'\n            })\n        }, 2000);\n    }\n\n    componentDidMount() {\n        this.setState({\n            ...this.state,\n            img: {\n                ...this.state.img,\n                src: this.state.src,\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.state.timer)\n    }\n\n    render() {\n        const {loading, title, imageStatus, img} = this.state\n        const {handleImageLoaded, handleImageErrored} = this\n        return (\n                <div className='loading'>\n                    <h3>{title}</h3>\n                    <img hidden={!loading} src={puff} width=\"100\" alt=\"loading\"/>\n                    {imageStatus\n                            ? imageStatus\n                            : <img\n                                    onLoad={handleImageLoaded}\n                                    onError={handleImageErrored}\n                                    className='loading__img'\n                                    hidden={loading}\n                                    src={img.src}\n                                    title={title}\n                                    alt={title}/>}\n                </div>\n        )\n    }\n}\n\nexport default LoaderImg;\n","import React, {Component} from 'react';\nimport LoaderImg from \"@lesson_2/components/LoaderImg\";\n\n\nexport class Task3 extends Component {\n\n    render() {\n        return (\n            <>\n                <h1>Task 3</h1>\n                <LoaderImg title='Lord of the Rings' src='http://cdn.paperhi.com/1920x1080/20130315/fantasy%20the%20lord%20of%20the%20rings%20maps%20middleearth%201920x1080%20wallpaper_www.paperhi.com_45.jpg'/>\n                <LoaderImg title='Error image' src='http://fake.url/error.png'/>\n            </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport {Table, Row, Cell} from \"@lesson_2/components\";\n\n\nexport class Task4 extends Component {\n    currency = ['', '$', '€', '₴', 'Zł']\n    state = {\n        data: this.dataGenerator(100)\n    }\n\n    dataGenerator(n) {\n        const {currency} = this\n        const data = []\n        while (data.length < n) {\n            data.push(\n                {\n                    date: this.generateRandomDate(),\n                    number: Math.floor(Math.random() * 100) + 1,\n                    money: {\n                        number: Math.floor(Math.random() * 10000) + 1,\n                        currency: currency[Math.floor(Math.random() * currency.length)],\n                    },\n                }\n            )\n        }\n        return data\n    }\n\n    generateRandomDate() {\n        return new Date(new Date().getTime() - Math.floor(Math.random() * 100000000000)).toDateString()\n    }\n\n    render() {\n        const {data} = this.state\n        return (\n            <>\n                <h1>Task 4</h1>\n                <Table>\n                    <Row head={true}>\n                        <Cell background={'darkgray'}>\n                            #\n                        </Cell>\n                        <Cell background={'darkgray'}>\n                            date\n                        </Cell>\n                        <Cell background={'darkgray'}>\n                            number\n                        </Cell>\n                        <Cell background={'darkgray'}>\n                            money\n                        </Cell>\n                    </Row>\n                    {\n                        data.map((row) => (\n                            <Row key={uuidv4()}>\n                                <Cell>\n                                </Cell>\n                                <Cell\n                                    type='date'\n                                >\n                                    {row.date}\n                                </Cell>\n                                <Cell\n                                    type='number'\n                                >\n                                    {row.number}\n                                </Cell>\n                                <Cell\n                                    type='money'\n                                    currency={row.money.currency}\n                                >\n                                    {row.money.number}\n                                </Cell>\n                            </Row>\n                        ))\n                    }\n                </Table>\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport './style.scss'\nimport PropTypes from \"prop-types\";\nimport {v4 as uuidv4} from 'uuid';\n\nexport const Button = ({text, style, action}) => {\n\n    const clickHandler = () => {\n        action({\n            id: uuidv4(),\n            text: `click on ${text}`,\n            color: style.backgroundColor\n        })\n    }\n\n    return (\n            <button className='custom-btn' style={style} onClick={clickHandler}>\n                {text}\n            </button>\n    );\n};\n\nButton.defaultProps = {\n    text: 'default',\n    style: {backgroundColor: '#005eff'},\n    action: () => {\n        console.log('default click')\n    }\n}\n\nButton.propTypes = {\n    logger: PropTypes.func\n};\n","import React from 'react';\nimport './style.scss'\nimport classNames from \"classnames\";\n\n\nexport const Table = ({children, theme}) => {\n    return (\n        <div className={classNames('table', theme)}>\n            {React.Children.map(children, (child, i) => {\n                return React.cloneElement(child, {index: i, theme});\n            })}\n        </div>\n    );\n};\n","import React from 'react';\nimport './style.scss'\nimport classNames from \"classnames\";\n\n\nexport const Row = ({children, index, head, theme}) => {\n    return (\n        <div className={classNames('row', {'head': head}, theme)}>\n            {React.Children.map(children, (child, i) => {\n                if (i === 0 && !head) return React.cloneElement(child, {children: index, theme});\n                return React.cloneElement(child, {theme})\n            })}\n        </div>\n    );\n};\n\nRow.defaultProps = {\n    head: false\n}\n","import React from 'react';\nimport './style.scss'\nimport classNames from \"classnames\";\n\n\nconst DateCell = ({children, background, color, theme}) => {\n    return <div style={{backgroundColor: background, color: color}}\n                className={classNames('cell date', theme)}>\n        {children}\n    </div>\n};\n\nDateCell.defaultProps = {\n    background: 'transparent',\n    color: 'blueviolet'\n}\n\nconst NumberCell = ({children, background, color, theme}) => {\n    return <div style={{backgroundColor: background, color: color}}\n                className={classNames('cell number', theme)}>\n        {children}\n    </div>\n};\n\nNumberCell.defaultProps = {\n    background: 'transparent',\n    color: 'blue'\n}\n\nconst MoneyCell = ({children, background, color, currency, theme}) => {\n    const addCurrency = () => (\n            currency ? currency : console.log('currency empty')\n    )\n\n    return <div style={{backgroundColor: background, color: currency ? color : 'red'}}\n                className={classNames('cell money', theme)}>\n        {children} {addCurrency()}\n    </div>\n};\n\nMoneyCell.defaultProps = {\n    background: 'transparent',\n    color: 'green'\n}\n\nconst TextCell = ({children, background, color, theme}) => {\n    return <div style={{backgroundColor: background, color: color}}\n                className={classNames('cell text', theme)}>\n        {children}\n    </div>\n};\n\nTextCell.defaultProps = {\n    background: 'transparent',\n    color: 'black'\n}\n\nconst types = [\n    {type: 'date', component: DateCell},\n    {type: 'number', component: NumberCell},\n    {type: 'money', component: MoneyCell},\n    {type: 'text', component: TextCell},\n    {type: 'default', component: TextCell}\n];\n\nexport const Cell = (props) => {\n    let subCell = types.find(cell => cell.type === props.type);\n    if (subCell) {\n        return <subCell.component {...props}/>\n    } else {\n        return <TextCell {...props} />\n    }\n}\n\nCell.defaultProps = {\n    type: 'text',\n    cells: 1,\n}\n","import React, {Component} from 'react';\nimport {Task1, Task2, Task3, Task4} from \"@lesson_2/components\";\n\n\nexport class Main extends Component {\n    render() {\n        return (\n                <>\n                    <h1>Lesson 2</h1>\n                    <div className='container'>\n                        <div className='container__center'>\n                            <Task1/>\n                            <Task2/>\n                            <Task3/>\n                            <Task4/>\n                        </div>\n                    </div>\n                </>\n        );\n    }\n}\n","import React       from 'react'\nimport {PropTypes} from \"prop-types\";\nimport './style.scss'\nimport classNames  from \"classnames\";\n\n\nexport const Toggler = ({name, children, action, activeState, id, theme}) => {\n    return (\n            <div className={classNames('toggle', theme)}>\n                <b className='toggle__title'>{name}</b>\n                <div>\n                    {\n                        React.Children.count(children) > 0 &&\n                        React.Children.map(children, (item) => {\n                            if (React.isValidElement(item)) {\n                                return React.cloneElement(\n                                        item, {\n                                            active: item.props.value === activeState,\n                                            action: action({\n                                                value: item.props.value,\n                                                id\n                                            })\n                                        }\n                                );\n                            }\n                        })\n                    }\n                </div>\n            </div>\n    )\n}\n\nToggler.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    action: PropTypes.func.isRequired,\n    activeState: PropTypes.string,\n    children: PropTypes.arrayOf(PropTypes.element)\n}\n","import React from 'react'\nimport classNames from \"classnames\";\nimport {PropTypes} from \"prop-types\";\n\nexport const TogglerItem = ({children, value, active, action}) => {\n    return (\n            <button\n                    className={classNames('toggle__item', {active: active})}\n                    type=\"button\"\n                    onClick={action}\n            >\n                {children || value}\n            </button>\n    )\n}\n\nTogglerItem.propTypes = {\n    action: PropTypes.func,\n    active: PropTypes.bool,\n    value: PropTypes.string,\n    children: PropTypes.string\n}\n","import React from 'react';\nimport {PropTypes} from \"prop-types\";\nimport classNames from \"classnames\";\nimport './style.scss'\n\n\nexport const Input = ({name, type, placeholder, value, handler, contentLength, contentMaxLength, theme}) => {\n    return (\n            <label className='input'>\n                <div className='input__label'>{name}</div>\n\n                <input\n                        className={classNames('input__field', {valid: value}, theme)}\n                        type={type}\n                        placeholder={placeholder}\n                        value={value}\n                        onChange={handler}\n                        maxLength={contentMaxLength}\n                        max={contentMaxLength}\n                        min={1}\n                />\n                {\n                    contentLength ?\n                            <span className='input__helper'>\n                                Content length: {value.length} of {contentMaxLength}\n                            </span> :\n                            <></>\n                }\n            </label>\n\n    );\n};\n\nInput.propTypes = {\n    type: PropTypes.oneOf([\n        'text',\n        'password',\n        'number'\n    ]).isRequired,\n    placeholder: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.any\n    ]),\n    handler: PropTypes.func.isRequired,\n    contentLength: PropTypes.bool,\n    contentMaxLength: PropTypes.number\n}\n","import React from 'react';\nimport './style.scss'\n\n\nexport const Table = ({children}) => {\n    return (\n        <div className='table-memo'>\n            {React.Children.map(children, child => {\n                return React.cloneElement(child);\n            })}\n        </div>\n    );\n};\n","import React from 'react';\nimport './style.scss'\n\n\nexport const Row = ({children}) => {\n    return (\n        <div className='row-memo'>\n            {React.Children.map(children, (child, i) => {\n                return child\n            })}\n        </div>\n    );\n};\n","import React from 'react';\nimport './style.scss'\n\n\nexport const Cell = React.memo(({children, handler}) => {\n    console.log('render')\n    return (\n            <div className='cell-memo'>\n                <input onChange={handler} className='cell-memo__input' type=\"text\" value={children}/>\n            </div>\n    );\n}, (prev, next) =>\n{\n    return prev.children === next.children\n});\n","import React, {Component} from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport {Toggler, TogglerItem} from \"@lesson_3/components\";\n\n\nexport class Task1 extends Component {\n    state = {\n        data: [\n            {\n                id: uuidv4(),\n                activeState: 'Male',\n                name: 'gender',\n                items: ['Male', 'Female'],\n            },\n            {\n                id: uuidv4(),\n                activeState: 'Center',\n                name: 'layout',\n                items: ['Left', 'Center', 'Right', 'Baseline'],\n            },\n            {\n                id: uuidv4(),\n                activeState: 'Dwarf',\n                name: 'race',\n                items: ['Human', 'Dwarf', 'Elf', 'Orc', 'Goblin'],\n            },\n            {\n                id: uuidv4(),\n                activeState: 'Hunter',\n                name: 'class',\n                items: ['Warrior', 'Hunter', 'Rogue', 'Mage'],\n\n            }\n        ]\n    }\n\n    active = ({value, id}) => _ => {\n        const modState = {...this.state}\n        modState.data.map(toggle => {\n            if (toggle.id === id) toggle.activeState = value;\n            return toggle\n        })\n        this.setState({modState})\n    }\n\n    render() {\n        const {data} = this.state\n        const {active} = this\n\n        return (\n                <>\n                    <h1>Task 1</h1>\n                    {\n                        data.map(toggle =>\n                                <Toggler\n                                        action={active}\n                                        id={toggle.id}\n                                        key={toggle.id}\n                                        name={toggle.name}\n                                        activeState={toggle.activeState}\n                                >\n                                    {toggle.items.map(item => <TogglerItem key={uuidv4()} value={item}/>)}\n                                </Toggler>\n                        )\n                    }\n                </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport {Input} from \"@lesson_3/components\";\n\n\nexport class Task2 extends Component {\n    state = {\n        data: [\n            {\n                id: uuidv4(),\n                name: 'Login',\n                type: 'text',\n                placeholder: 'Login',\n                value: '',\n                contentLength: true,\n                contentMaxLength: 20,\n            },\n            {\n                id: uuidv4(),\n                name: 'Password',\n                type: 'password',\n                placeholder: 'Password',\n                value: '',\n                contentLength: true,\n                contentMaxLength: 20,\n            },\n            {\n                id: uuidv4(),\n                name: 'Year',\n                type: 'number',\n                placeholder: 'Year',\n                value: '',\n                contentLength: false,\n                contentMaxLength: new Date().getFullYear(),\n            },\n            {\n                id: uuidv4(),\n                name: 'Month',\n                type: 'number',\n                placeholder: 'Month',\n                value: '',\n                contentLength: false,\n                contentMaxLength: 12,\n            },\n            {\n                id: uuidv4(),\n                name: 'Day',\n                type: 'number',\n                placeholder: 'Day',\n                value: '',\n                contentLength: false,\n                contentMaxLength: 31,\n            }\n        ]\n    }\n\n    handler = id => e => {\n        const modState = {...this.state}\n        modState.data.map(input => {\n            if (input.id === id) {\n                if (input.type === 'number') {\n                    if (e.target.value > input.contentMaxLength) {\n                        input.value = input.contentMaxLength\n                    } else {\n                        input.value = e.target.value\n                    }\n                } else {\n                    input.value = e.target.value\n                }\n            }\n            return input\n        })\n        this.setState({modState})\n    }\n\n    render() {\n        const {handler} = this\n        const {data} = this.state\n\n        return (\n                <>\n                    <h1>Task 2</h1>\n                    {\n                        data.map(input =>\n                                <Input\n                                        key={input.id}\n                                        name={input.name}\n                                        type={input.type}\n                                        placeholder={input.placeholder}\n                                        value={input.value}\n                                        handler={handler(input.id)}\n                                        contentLength={input.contentLength}\n                                        contentMaxLength={input.contentMaxLength}\n                                />\n                        )\n                    }\n                </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport {Input, Toggler, TogglerItem} from \"@lesson_3/components\";\nimport './style.scss'\n\n\nexport class Task3 extends Component {\n    state = {\n        input: {\n            name: {\n                id: uuidv4(),\n                name: 'Name',\n                type: 'text',\n                placeholder: 'Name',\n                value: '',\n                contentLength: true,\n                contentMaxLength: 20,\n            },\n            password: {\n                id: uuidv4(),\n                name: 'Password',\n                type: 'password',\n                placeholder: 'Password',\n                value: '',\n                contentLength: true,\n                contentMaxLength: 20,\n            },\n            year: {\n                id: uuidv4(),\n                name: '',\n                type: 'number',\n                placeholder: 'Year',\n                value: '',\n                contentLength: false,\n                contentMaxLength: new Date().getFullYear(),\n            },\n            month: {\n                id: uuidv4(),\n                name: '',\n                type: 'number',\n                placeholder: 'Month',\n                value: '',\n                contentLength: false,\n                contentMaxLength: 12,\n            },\n            day: {\n                id: uuidv4(),\n                name: '',\n                type: 'number',\n                placeholder: 'Day',\n                value: '',\n                contentLength: false,\n                contentMaxLength: 31,\n            },\n            language: {\n                id: uuidv4(),\n                name: 'Language',\n                type: 'text',\n                placeholder: 'Language',\n                value: '',\n                contentLength: false,\n                contentMaxLength: 20,\n            }\n\n        },\n        toggle: {\n            gender: {\n                id: uuidv4(),\n                activeState: 'Male',\n                name: 'gender',\n                items: ['Male', 'Female'],\n            },\n            layout: {\n                id: uuidv4(),\n                activeState: 'Center',\n                name: 'layout',\n                items: ['Left', 'Center', 'Right', 'Baseline'],\n            }\n        }\n    }\n\n    handler = id => e => {\n        const modState = {...this.state}\n        Object.values(modState.input).map(input => {\n            if (input.id === id) {\n                if (input.type === 'number') {\n                    if (e.target.value > input.contentMaxLength) {\n                        input.value = input.contentMaxLength\n                    } else {\n                        input.value = e.target.value\n                    }\n                } else {\n                    input.value = e.target.value\n                }\n            }\n            return input\n        })\n        this.setState({modState})\n    }\n\n    active = ({value, id}) => _ => {\n        const modState = {...this.state}\n        Object.values(modState.toggle).map(toggle => {\n            if (toggle.id === id) toggle.activeState = value;\n            return toggle\n        })\n        this.setState({modState})\n    }\n\n\n    submitHandler = (e) => {\n        e.preventDefault()\n        const data = [...e.target]\n        const form = {}\n        data.forEach(i => {\n            if (i.localName === 'input') {\n                form[i.placeholder.toLowerCase()] = i.value\n            } else if (i.localName === 'button' && i.classList.contains('active') && i.type === 'button') {\n                form[i.parentElement.previousSibling.textContent] = i.textContent\n            }\n        })\n        console.log(form)\n        for (const [key, value] of Object.entries(form)) {\n            console.log(`${key}: ${value}`);\n        }\n    }\n\n    render() {\n        const {handler, active, submitHandler} = this\n        const {gender, layout} = this.state.toggle\n        const {name, password, year, month, day, language} = this.state.input\n\n        return (\n                <>\n                    <h1>Task 3</h1>\n                    <form className='from' onSubmit={submitHandler}>\n                        <Input\n                                key={name.id}\n                                name={name.name}\n                                type={name.type}\n                                placeholder={name.placeholder}\n                                value={name.value}\n                                handler={handler(name.id)}\n                                contentLength={name.contentLength}\n                                contentMaxLength={name.contentMaxLength}\n                        />\n                        <Input\n                                key={password.id}\n                                name={password.name}\n                                type={password.type}\n                                placeholder={password.placeholder}\n                                value={password.value}\n                                handler={handler(password.id)}\n                                contentLength={password.contentLength}\n                                contentMaxLength={password.contentMaxLength}\n                        />\n                        <Toggler\n                                action={active}\n                                id={gender.id}\n                                key={gender.id}\n                                name={gender.name}\n                                activeState={gender.activeState}\n                        >\n                            {gender.items.map(item => <TogglerItem key={uuidv4()} value={item}/>)}\n                        </Toggler>\n\n                        <div className='date'>\n                            <div className='date__label'>\n                                Date of Birth\n                            </div>\n                            <div className='date__input'>\n                                <Input\n                                        key={day.id}\n                                        name={day.name}\n                                        type={day.type}\n                                        placeholder={day.placeholder}\n                                        value={day.value}\n                                        handler={handler(day.id)}\n                                        contentLength={day.contentLength}\n                                        contentMaxLength={day.contentMaxLength}\n                                />\n                                <Input\n                                        key={month.id}\n                                        name={month.name}\n                                        type={month.type}\n                                        placeholder={month.placeholder}\n                                        value={month.value}\n                                        handler={handler(month.id)}\n                                        contentLength={month.contentLength}\n                                        contentMaxLength={month.contentMaxLength}\n                                />\n                                <Input\n                                        key={year.id}\n                                        name={year.name}\n                                        type={year.type}\n                                        placeholder={year.placeholder}\n                                        value={year.value}\n                                        handler={handler(year.id)}\n                                        contentLength={year.contentLength}\n                                        contentMaxLength={year.contentMaxLength}\n                                />\n                            </div>\n                        </div>\n\n                        <Toggler\n                                action={active}\n                                id={layout.id}\n                                key={layout.id}\n                                name={layout.name}\n                                activeState={layout.activeState}\n                        >\n                            {layout.items.map(item => <TogglerItem key={uuidv4()} value={item}/>)}\n                        </Toggler>\n\n                        <Input\n                                key={language.id}\n                                name={language.name}\n                                type={language.type}\n                                placeholder={language.placeholder}\n                                value={language.value}\n                                handler={handler(language.id)}\n                                contentLength={language.contentLength}\n                                contentMaxLength={language.contentMaxLength}\n                        />\n                        <button className='submit' type='submit'>submit</button>\n                    </form>\n                </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport {Table, Row, Cell} from \"@lesson_3/components\";\n\n\nconst data_array = ({row, cell}) => {\n    return Array.from({length: row},\n            () => ({\n                id: uuidv4(),\n                row: Array.from({length: cell},\n                        () => ({\n                            id: uuidv4(),\n                            value: Math.floor(Math.random() * 10)\n                        }))\n            })\n    )\n}\n\n\nexport class Task4 extends Component {\n    state = {\n        table: [],\n        handler: ({row, cell}) => e => {\n            const clone = {...this.state}\n            clone.table[row].row[cell].value = e.target.value\n            this.setState({clone})\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            table: data_array({row: 50, cell: 50})\n        })\n    }\n\n    render() {\n        const {handler, table} = this.state\n        return (\n                <>\n                    <h1>Task 4</h1>\n                    <Table>\n                        {table.map((row, ri) => (\n                                <Row key={row.id}>\n                                    {row.row.map((cell, ci) => (\n                                            <Cell key={cell.id} handler={\n                                                handler({\n                                                            row: ri,\n                                                            cell: ci\n                                                        }\n                                                )}>\n                                                {cell.value}\n                                            </Cell>\n                                    ))}\n                                </Row>\n                        ))}\n                    </Table>\n                </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Task1, Task2, Task3, Task4} from \"@lesson_3/views\";\n\n\nexport class Main extends Component {\n    render() {\n        return (\n                <>\n                    <h1>Lesson 3</h1>\n                    <div className='container'>\n                        <div className='container__center'>\n                            <Task1/>\n                            <Task2/>\n                            <Task3/>\n                            <Task4/>\n                        </div>\n                    </div>\n                </>\n        );\n    }\n}\n","import React, {Component, createRef} from 'react';\nimport Chart from 'chart.js/auto';\nimport {PropTypes} from \"prop-types\";\nimport classNames from \"classnames\";\nimport './Canvas.scss'\n\n\nexport class Canvas extends Component {\n    state = {\n        ...this.props\n    }\n    chartRef = createRef()\n\n    componentDidMount() {\n        const {data, chartName, type, run} = this.state\n        const ctx = this.chartRef.current.getContext('2d');\n        this.setState({\n            labelsLength: data.labels.length,\n            defaultLabels: [...data.labels]\n        })\n        this.chart = new Chart(ctx, {\n            type,\n            data,\n            options: {\n                elements: {\n                    line: {\n                        tension: 0.4\n                    }\n                },\n                responsive: true,\n                plugins: {\n                    legend: {\n                        position: 'top',\n                    },\n                    title: {\n                        display: true,\n                        text: chartName,\n                        color: '#000000',\n                    }\n                }\n            },\n        });\n        this.randomizeData()\n        if (run) this.start()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timer)\n    }\n\n    randomizeColor = () => {\n        let color = []\n        for (let i = 0; i < 3; i++) color.push(Math.floor(Math.random() * 255))\n        return `rgb(${color.join(', ')})`\n    }\n\n    randomizeCountry = () => {\n        const {lineNames} = this.state\n        return lineNames[Math.floor(Math.random() * lineNames.length)]\n    }\n\n    randomizeData = () => {\n        this.stop()\n        const {count} = this.state\n        this.chart.data.datasets.length = 0\n\n        for (let i = 0; i < count; i++) {\n            this.generateLine([0])\n        }\n    }\n\n    generateLine = (data) => {\n        const {randomizeCountry, randomizeColor} = this\n        const color = randomizeColor()\n\n        this.chart.data.datasets.push({\n            label: randomizeCountry(),\n            data,\n            borderColor: color,\n            backgroundColor: color\n        })\n        this.chart.update();\n    }\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    start = () => {\n        this.stop()\n        this.timer = setInterval(\n                () => {\n                    const {datasets, labels} = this.chart.data\n                    const {dynamic, labelsTypes, labelsLength, labelsStep} = this.state\n                    datasets.map(line => {\n                        let inc = line.data[line.data.length - 1] + this.getRandomInt(-5, 10);\n                        if (inc < 0) inc = 0\n                        line.data.push(inc)\n                        if (line.data.length > 50) this.setState({dynamic: true})\n\n                        if (line.data.length >= labels.length) {\n                            if (!dynamic) {\n                                if (labelsTypes === 'number') {\n                                    labels.push(labels[labels.length - 1] + labelsStep)\n                                } else if (labelsTypes === 'string') {\n                                    labels.push(labels[labels.length - labelsLength])\n                                }\n                            } else {\n                                if (labelsTypes === 'number') {\n                                    line.data.shift()\n                                    labels.shift()\n                                    labels.push(labels[labels.length - 1] + labelsStep)\n                                } else if (labelsTypes === 'string') {\n                                    line.data.shift()\n                                    labels.push(labels.shift())\n                                }\n                            }\n                        }\n                        return line\n                    })\n                    this.chart.update();\n                },\n                this.state.interval);\n        this.setState({\n            run: true\n        })\n    }\n\n    stop = () => {\n        clearInterval(this.timer)\n        this.setState({\n            run: false\n        })\n    }\n\n    inputHandler = (e) => {\n        this.setState({\n            count: e.target.value\n        })\n        this.generateLine(\n                Array.from(\n                        {length: this.chart.data.datasets[0].data.length},\n                        () => 0\n                )\n        )\n    }\n\n    intervalHandler = (e) => {\n        this.stop()\n        this.setState({\n            interval: e.target.value\n        })\n    }\n\n    dynamicHandler = () => {\n        const {dynamic} = this.state\n        this.setState({\n            dynamic: !dynamic\n        })\n    }\n\n    resetData = () => {\n        this.stop()\n        this.setState({count: 1})\n        this.chart.data.labels = [...this.state.defaultLabels]\n        this.chart.data.datasets.length = 1\n        this.chart.data.datasets[0].data = [0]\n        this.chart.update()\n    }\n\n    refresh = () => {\n        this.stop()\n        this.start()\n    }\n\n    render() {\n        const {inputHandler, intervalHandler, randomizeData, chartRef, start, stop, dynamicHandler, resetData} = this\n        const {count, interval, dynamic, run} = this.state\n        return (\n                <div className='chart__container'>\n                    <div className={classNames('chart__indicator', run ? 'run' : 'stop')}>\n                        {run ? 'RUN' : 'STOP'}\n                    </div>\n                    <canvas ref={chartRef} width={800} hidden={800}>\n                    </canvas>\n                    <div className='chart__footer'>\n                        <label className='input chart'>\n                            <div className='input__label chart'>Number of lines</div>\n                            <input className='input__field chart' onChange={inputHandler}\n                                   min={count} value={count} type=\"number\"/>\n                        </label>\n\n                        <label className='input chart'>\n                            <div className='input__label chart'>Interval</div>\n                            <input className='input__field chart' onChange={intervalHandler}\n                                   min={500} value={interval} step={500} type=\"number\"/>\n                        </label>\n\n                        <button className='custom-btn chart randomize' type=\"button\" onClick={randomizeData}>\n                            Randomize\n                        </button>\n                        {run\n                                ?\n                                <button className='custom-btn chart stop' type=\"button\" onClick={stop}>\n                                    Stop\n                                </button>\n                                :\n                                <button className='custom-btn chart start' type=\"button\" onClick={start}>\n                                    Start\n                                </button>\n                        }\n\n                        <button className='custom-btn chart static' type=\"button\" onClick={dynamicHandler}>\n                            {!dynamic ? 'Dynamic' : 'Static'}\n                        </button>\n\n                        <button className='custom-btn chart' type=\"button\" onClick={resetData}>\n                            Reset\n                        </button>\n                    </div>\n                </div>\n        );\n    };\n}\n\n\nCanvas.propTypes = {\n    type: PropTypes.oneOf([\n        'line',\n        'bar',\n        'bubble',\n        'doughnut',\n        'scatter',\n        'pie',\n        'polarArea',\n        'radar'\n    ]),\n    chartName: PropTypes.string,\n    labelsTypes: PropTypes.oneOf([\n        'number',\n        'string',\n    ]),\n    defaultLabels: PropTypes.array,\n    labelsLength: PropTypes.number,\n    labelsStep: PropTypes.number,\n    count: PropTypes.number,\n    run: PropTypes.bool,\n    dynamic: PropTypes.bool,\n    lineNames: PropTypes.arrayOf(\n            PropTypes.string\n    ),\n    data: PropTypes.shape({\n                labels: PropTypes.array,\n                datasets: PropTypes.arrayOf(\n                        PropTypes.shape({\n                            data: PropTypes.arrayOf(PropTypes.number),\n                            label: PropTypes.string\n                        })\n                )\n            }\n    ),\n    interval: PropTypes.number\n}\n\nCanvas.defaultProps = {\n    type: 'line',\n    count: 1,\n    run: false,\n    dynamic: true,\n    lineNames: ['LineName'],\n    chartName: 'ChartName',\n    labelsTypes: 'string',\n    defaultLabels: [],\n    labelsLength: 0,\n    labelsStep: 10,\n    data: {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        datasets: [{\n            data: [0, 17, 41, 19, 20, 19, 95, 81],\n            label: 'LineName',\n            borderColor: 'blue',\n            backgroundColor: 'blue'\n        }],\n        defaults: {\n            color: '#000000',\n            borderColor: '#000000'\n        }\n    },\n    interval: 500\n}\n","import {createContext} from \"react\";\n\nexport const ThemeContext = createContext({});\n","import React from 'react';\nimport {Button} from \"@lesson_2/components\";\nimport {Input, Toggler, TogglerItem} from \"@lesson_3/components\";\nimport {Cell, Row, Table} from \"@lesson_2/components\";\nimport {ThemeContext} from '@lesson_4/views/Task2/theme-context';\nimport {v4 as uuidv4} from \"uuid\";\nimport './ChangeTheme.scss';\n\n\nexport class ChangeTheme extends React.Component {\n    currency = ['$', '€', '₴', 'Zł']\n\n    state = {\n        data: this.dataGenerator(5),\n        input: '',\n        toggler: {\n            id: uuidv4(),\n            activeState: 'Hunter',\n            name: 'class',\n            items: ['Warrior', 'Hunter', 'Rogue', 'Mage'],\n        }\n    }\n\n    dataGenerator(n) {\n        const {currency} = this\n        const data = []\n        while (data.length < n) {\n            data.push(\n                    {\n                        date: this.generateRandomDate(),\n                        number: Math.floor(Math.random() * 100) + 1,\n                        money: {\n                            number: Math.floor(Math.random() * 10000) + 1,\n                            currency: currency[Math.floor(Math.random() * currency.length)],\n                        },\n                    }\n            )\n        }\n        return data\n    }\n\n    generateRandomDate() {\n        return new Date(new Date().getTime() - Math.floor(Math.random() * 100000000000)).toDateString()\n    }\n\n    handler = e => {\n        this.setState({input: e.target.value})\n    }\n\n    active = ({value}) => _ => {\n        this.setState({\n            toggler: {\n                ...this.state.toggler,\n                activeState: value\n            }\n        })\n    }\n\n    compose = (f) => {\n        return function () {\n            return f();\n        };\n    };\n\n    render() {\n        const {input, toggler, data} = this.state\n        const {compose, handler, active} = this\n\n        return (\n                <ThemeContext.Consumer>\n                    {({theme, changeTheme}) => (\n                            <div>\n                                <div>\n                                    <Button text={'Light'}\n                                            style={{backgroundColor: '#00aeff'}}\n                                            action={\n                                                compose(() => changeTheme('light'))\n                                            }\n                                    />\n                                    <Button\n                                            text={'Dark'}\n                                            style={{backgroundColor: '#003a56'}}\n                                            action={\n                                                compose(() => changeTheme('dark'))\n                                            }\n                                    />\n                                </div>\n\n                                <Input placeholder={`${theme} theme`} theme={theme} value={input}\n                                       type={\"text\"} handler={handler}/>\n\n                                <Toggler theme={theme} {...toggler} action={active}>\n                                    {toggler.items.map(item => <TogglerItem key={uuidv4()} value={item}/>)}\n                                </Toggler>\n\n                                <Table theme={theme}>\n                                    <Row head={true}>\n                                        <Cell>#</Cell>\n                                        <Cell>date</Cell>\n                                        <Cell>number</Cell>\n                                        <Cell>money</Cell>\n                                    </Row>\n                                    {data.map((row) => (\n                                            <Row key={uuidv4()}>\n                                                <Cell> </Cell>\n                                                <Cell type='date'>{row.date}</Cell>\n                                                <Cell type='number'>{row.number}</Cell>\n                                                <Cell type='money' currency={row.money.currency}>\n                                                    {row.money.number}\n                                                </Cell>\n                                            </Row>\n                                    ))}\n                                </Table>\n                            </div>\n                    )}\n                </ThemeContext.Consumer>\n        );\n    }\n}\n","import React, {useState, useEffect}  from \"react\";\nimport {Input, Toggler, TogglerItem} from \"@lesson_3/components\";\nimport {Button}                      from \"@lesson_2/components\";\nimport {v4 as uuidv4}                         from \"uuid\";\nimport {Selector, SelectorItem} from \"@lesson_4/components\";\n\n\nexport const ControlledForm = () => {\n    const [stack, setStack] = useState([])\n    const [selector, setSelector] = useState(\n            {\n                id: uuidv4(),\n                activeState: 'select city',\n                name: 'City',\n                items: ['select city', 'Kyiv', 'Lviv', 'Harkiv', 'Odesa']\n            }\n    )\n    const [toggler, setToggler] = useState(\n            {\n                id: uuidv4(),\n                activeState: '',\n                name: 'Type',\n                items: ['Free', 'Standard', 'Premium'],\n            }\n    )\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n\n    useEffect(() => {\n        setSelector({...selector, activeState: 'select city'})\n        setToggler({...toggler, activeState: ''})\n        setUsername('')\n        setEmail('')\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [stack])\n\n    const handlerUsername = (e) => setUsername(e.target.value.trim());\n\n    const handlerEmail = (e) => {\n        setEmail(e.target.value.trim())\n    };\n\n    const handlerSelector = ({value}) => _ => {\n        setSelector({\n            ...selector,\n            activeState: value\n        })\n    }\n\n    const handlerToggler = ({value}) => _ => {\n        setToggler({\n            ...toggler,\n            activeState: value,\n        })\n    }\n\n    const result = (data) => {\n        return (\n                <div key={data.id}>\n                    <hr/>\n                    <p>Username: <b>{data.username}</b></p>\n                    <p>Email: <b>{data.email}</b></p>\n                    <p>City: <b>{data.city}</b></p>\n                    <p>Type: <b>{data.type}</b></p>\n                </div>\n        )\n    }\n\n    const onSubmit = () => {\n        let error = ''\n        const data = {\n            id: uuidv4(),\n            username: username,\n            email: email,\n            city: selector.activeState,\n            type: toggler.activeState,\n        }\n\n        if (!data.username) {\n            error += 'username not validate\\n';\n        }\n        if (!validateEmail(data.email)) {\n            error += 'email not validate\\n';\n        }\n        if (data.city === 'select city') {\n            error += 'city not validate\\n';\n        }\n        if (!data.type) {\n            error += 'type not validate\\n';\n        }\n\n        if (!error) return setStack([data, ...stack])\n        alert(error)\n    };\n\n    const validateEmail = (email) => {\n        const re = /\\S+@\\S+\\.\\S+/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    return (\n            <div>\n                <Input type={\"text\"} placeholder={\"UserName\"} handler={handlerUsername} value={username}/>\n                <Input type={\"text\"} placeholder={\"Email\"} handler={handlerEmail} value={email}/>\n\n                <Selector {...selector} action={handlerSelector}>\n                    {selector.items.map(item => <SelectorItem key={uuidv4()} value={item}/>)}\n                </Selector>\n\n                <Toggler {...toggler} action={handlerToggler}>\n                    {toggler.items.map(item => <TogglerItem key={uuidv4()} value={item}/>)}\n                </Toggler>\n\n                <Button text={'Enter'} style={{width: '-webkit-fill-available'}} action={onSubmit}/>\n\n                <div>\n                    {stack.map(data => result(data))}\n                </div>\n            </div>\n    );\n};\n","import React, {useState, useRef} from 'react';\nimport classNames                from \"classnames\";\nimport {PropTypes}               from \"prop-types\";\nimport './Selector.style.scss'\nimport {v4 as uuidv4}            from \"uuid\";\nimport {SelectorDrop}            from \"@lesson_4/components\";\n\n\nexport const Selector = ({name, children, action, activeState, id}) => {\n    const btnRef = useRef(null)\n    const [show, setShow] = useState(false)\n    const [width, setWidth] = useState([])\n\n    const changeShow = () => {\n        setShow(!show)\n    }\n\n    const getWidth = (w) => {\n        setWidth([...width, w])\n    }\n\n    const compose = (f, g) => {\n        return function (x) {\n            return f(g(x));\n        };\n    };\n\n    return (\n            <div className={classNames('selector')}>\n                <b className='selector__title'>{name}</b>\n                <SelectorDrop getWidth={getWidth} btnRef={btnRef} key={uuidv4()} action={changeShow}>\n                    {activeState}\n                </SelectorDrop>\n                <div className={'selector__list'}>\n                    {\n                        React.Children.count(children) > 0 &&\n                        React.Children.map(children, (item) => {\n                            if (React.isValidElement(item)) {\n                                return React.cloneElement(\n                                        item, {\n                                            width: btnRef.current ? btnRef.current.offsetWidth : 'auto',\n                                            show,\n                                            active: item.props.value === activeState,\n                                            action: compose(action({\n                                                value: item.props.value,\n                                                id\n                                            }), changeShow),\n                                            getWidth\n                                        }\n                                );\n                            }\n                        })\n                    }\n                </div>\n            </div>\n    )\n}\n\nSelector.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    action: PropTypes.func.isRequired,\n    activeState: PropTypes.string,\n    children: PropTypes.arrayOf(PropTypes.element)\n}\n","import React from 'react';\nimport classNames from \"classnames\";\nimport {PropTypes} from \"prop-types\";\n\n\nexport const SelectorItem = ({children, value, active, action, show, width, btnRef}) => {\n    return (\n            <button\n                    ref={btnRef}\n                    style={{width}}\n                    className={classNames('selector__item', {active, show})}\n                    type=\"button\"\n                    onClick={action}\n            >\n                {children || value}\n            </button>\n    )\n}\n\nSelectorItem.propTypes = {\n    action: PropTypes.func,\n    active: PropTypes.bool,\n    value: PropTypes.string,\n    children: PropTypes.string\n}\n","import React       from 'react';\nimport classNames  from \"classnames\";\nimport {PropTypes} from \"prop-types\";\n\n\nexport const SelectorDrop = ({children, value, action, btnRef}) => {\n    return (\n            <button\n                    ref={btnRef}\n                    className={classNames('selector__item drop')}\n                    type=\"button\"\n                    onClick={action}\n            >\n                {children || value} ▼\n            </button>\n    )\n}\n\nSelectorDrop.propTypes = {\n    action: PropTypes.func,\n    active: PropTypes.bool,\n    value: PropTypes.string,\n    children: PropTypes.string\n}\n","import React, {useState} from 'react';\nimport {\n    JSONPlaceholder,\n    JSONPlaceholder2,\n    JSONPlaceholder3,\n    Selector,\n    SelectorItem\n}                        from \"@lesson_4/components\";\nimport {v4 as uuidv4}    from \"uuid\";\nimport './UseEffectComponents.style.scss'\n\n\nexport const UseEffectComponents = () => {\n    const [limit, setLimit] = useState(10)\n    const [selector, setSelector] = useState(\n            {\n                id: uuidv4(),\n                activeState: '10',\n                name: 'Limit',\n                items: ['10', '20', '30', '50', '100']\n            }\n    )\n\n    const urls = [\n        {\n            url: `https://jsonplaceholder.typicode.com/posts?_limit=${limit}`,\n            type: 'posts'\n        },\n\n        {\n            url: `https://jsonplaceholder.typicode.com/comments?_limit=${limit}`,\n            type: 'comments'\n        },\n        {\n            url: `https://jsonplaceholder.typicode.com/albums?_limit=${limit}`,\n            type: 'albums'\n        },\n        {\n            url: `https://jsonplaceholder.typicode.com/todos?_limit=${limit}`,\n            type: 'todos'\n        },\n        {\n            url: `https://jsonplaceholder.typicode.com/photos?_limit=${limit}`,\n            type: 'photos'\n        }\n    ]\n\n\n    const randomUrl = () => {\n        const randomIndex = Math.floor(Math.random() * urls.length)\n        return urls.splice(randomIndex, 1)[0]\n    }\n\n    const handlerSelector = ({value}) => _ => {\n        setSelector({\n            ...selector,\n            activeState: value\n        })\n        setLimit(value)\n    }\n\n    return (\n            <>\n                <Selector {...selector} action={handlerSelector}>\n                    {selector.items.map(item => <SelectorItem key={uuidv4()} value={item}/>)}\n                </Selector>\n                <div className={'UseEffectColumns'}>\n                    <JSONPlaceholder data={randomUrl()}/>\n                    <JSONPlaceholder2 data={randomUrl()}/>\n                    <JSONPlaceholder3 data={randomUrl()}/>\n                </div>\n            </>\n    );\n};\n","import {v4 as uuidv4} from \"uuid\";\n\n\nconst postsParser = (data) => (\n    data.map((i) => (\n        <div key={uuidv4()}>\n            <h4>{i.title}</h4>\n            <p>{i.body}</p>\n            <hr/>\n        </div>\n    ))\n)\n\nconst commentsParser = (data) => (\n    data.map((i) => (\n        <div key={uuidv4()}>\n            <hr/>\n            <p>\n                <b>{i.name}</b><br/>\n                <i>{i.email}</i><br/>\n                {i.body}\n            </p>\n        </div>\n    ))\n)\n\nconst albumsParser = (data) => (\n    data.map((i) => (\n        <div key={uuidv4()}>\n            <hr/>\n            <p><b>{i.title}</b></p>\n        </div>\n    ))\n)\n\nconst todosParser = (data) => (\n    data.map((i) => (\n        <div key={uuidv4()}>\n            <hr/>\n            <p>\n                <b>{i.completed ? '✔' : '❌'} - {i.title}</b><br/>\n            </p>\n        </div>\n    ))\n)\n\nconst photosParser = (data) => (\n    data.map((i) => (\n        <div key={uuidv4()}>\n            <hr/>\n            <h4>{i.title}</h4>\n            <img src={i.thumbnailUrl} alt={i.title}/>\n        </div>\n    ))\n)\n\nconst types = [\n    {type: 'posts', parser: postsParser},\n    {type: 'comments', parser: commentsParser},\n    {type: 'albums', parser: albumsParser},\n    {type: 'todos', parser: todosParser},\n    {type: 'photos', parser: photosParser}\n];\n\nexport const dataParse = ({type, posts}) => {\n    let parser = types.find(parser => parser.type === type);\n    if (parser) {\n        return parser.parser(posts)\n    } else {\n        return <></>\n    }\n}\n","import React          from 'react';\nimport {useDataFetch} from \"@lesson_4/components\";\nimport {dataParse}    from \"@lesson_4/libs/dataParse\";\n\n\nexport const JSONPlaceholder = ({data}) => {\n    const {url, type} = data\n    const [posts] = useDataFetch(url);\n\n    return (\n            <div style={{display: posts.length ? 'block' : 'none'}} className={'column'}>\n                <h2 style={{textAlign: 'center'}}>{type.toUpperCase()}</h2>\n                {dataParse({type, posts})}\n            </div>\n    );\n};\n","import React          from 'react';\nimport {useDataFetch} from \"@lesson_4/components\";\nimport {dataParse}    from \"@lesson_4/libs/dataParse\";\n\n\nexport const JSONPlaceholder2 = ({data}) => {\n    const {url, type} = data\n    const [posts] = useDataFetch(url);\n\n    return (\n            <div style={{display: posts.length ? 'block' : 'none'}} className={'column'}>\n                <h2 style={{textAlign: 'center'}}>{type.toUpperCase()}</h2>\n                {dataParse({type, posts})}\n            </div>\n    );\n};\n","import React          from 'react';\nimport {useDataFetch} from \"@lesson_4/components\";\nimport {dataParse}    from \"@lesson_4/libs/dataParse\";\n\n\nexport const JSONPlaceholder3 = ({data}) => {\n    const {url, type} = data\n    const [posts] = useDataFetch(url);\n\n    return (\n            <div style={{display: posts.length ? 'block' : 'none'}} className={'column'}>\n                <h2 style={{textAlign: 'center'}}>{type.toUpperCase()}</h2>\n                {dataParse({type, posts})}\n            </div>\n    );\n};\n","import {useEffect, useState} from \"react\";\n\n\nexport const useDataFetch = (url) => {\n    const [data, setData] = useState([])\n\n    useEffect(() => {\n        fetch(url)\n                .then(res => res.json())\n                .then(res => {\n                    setData(res);\n                })\n\n    }, [url])\n\n    return [\n        data,\n        setData\n    ];\n}\n","import React, {Component} from 'react';\nimport {Canvas} from \"@lesson_4/components\";\nimport country from './country.json';\n\n\nexport class Task1 extends Component {\n\n    render() {\n        return (\n                <>\n                    <h1>Task 1</h1>\n\n                    <Canvas\n                            run={true}\n                            count={3}\n                            dynamic={false}\n                            lineNames={country}\n                            chartName={'COUNTRY RANKING'}\n                            labelsTypes={'number'}\n                            interval={1000}\n                            data={{\n                                labels: [1900, 1910, 1920, 1930, 1940, 1950, 1960, 1970, 1980, 1990, 2000],\n                                datasets: []\n                            }}\n                    />\n\n                    <Canvas/>\n                </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {ThemeContext} from './theme-context'\nimport {ChangeTheme} from \"@lesson_4/components\";\n\nexport class Task2 extends Component {\n    state = {\n        theme: 'light'\n    }\n\n    changeTheme = (theme) => {\n        this.setState({theme});\n    }\n\n    render() {\n        const {theme} = this.state;\n        const {changeTheme} = this;\n\n        return (\n                <>\n                    <h1>Task 2</h1>\n                    <ThemeContext.Provider value={{theme, changeTheme}}>\n                        <ChangeTheme/>\n                    </ThemeContext.Provider>\n                </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {ControlledForm}   from \"@lesson_4/components\";\n\n\nexport class Task3 extends Component {\n\n    render() {\n        return (\n                <>\n                    <h1>Task 3</h1>\n                    <ControlledForm/>\n                </>\n        );\n    }\n}\n","import React, {Component}  from 'react';\nimport {UseEffectComponents} from \"@lesson_4/components\";\n\n\nexport class Task4 extends Component {\n\n    render() {\n        return (\n                <>\n                    <h1>Task 4</h1>\n                    <UseEffectComponents/>\n                </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {Task1, Task2, Task3, Task4} from \"@lesson_4/views\";\n\n\nexport class Main extends Component {\n    render() {\n        return (\n                <>\n                    <h1>Lesson 4</h1>\n                    <div className='container'>\n                        <div className='container__center'>\n                            <Task1/>\n                            <Task2/>\n                            <Task3/>\n                            <Task4/>\n                        </div>\n                    </div>\n                </>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {HashRouter, Switch, Route, Redirect} from \"react-router-dom\";\nimport {Header, Home} from \"@components\";\nimport {Main as Lesson1} from \"@lesson_1/views/Main\";\nimport {Main as Lesson2} from \"@lesson_2/views/Main\";\nimport {Main as Lesson3} from \"@lesson_3/views/Main\";\nimport {Main as Lesson4} from \"@lesson_4/views/Main\";\n\nclass App extends Component {\n    render() {\n        return (\n                <HashRouter>\n                    <Header/>\n\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <Home/>\n                        </Route>\n                        <Route path=\"/lesson/1\">\n                            <Lesson1/>\n                        </Route>\n                        <Route path=\"/lesson/2\">\n                            <Lesson2/>\n                        </Route>\n                        <Route path=\"/lesson/3\">\n                            <Lesson3/>\n                        </Route>\n                        <Route path=\"/lesson/4\">\n                            <Lesson4/>\n                        </Route>\n                        <Route path=\"*\">\n                            <Redirect to=\"/\" />\n                        </Route>\n                    </Switch>\n                </HashRouter>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss'\n\n\nReactDOM.render(\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>,\n        document.getElementById('root')\n);\n"],"sourceRoot":""}